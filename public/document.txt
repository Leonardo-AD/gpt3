class on favorites: https://www.youtube.com/watch?v=F627pKNUCVQ&list=WL&index=206 
minute: 1:12:10

Layout: https://www.figma.com/file/lz9lLpFHMxHm2odnwM3R0z/gpt3?node-id=0%3A15&t=4iFFDrdYVfC3IY4z-0

Setup our repository gpt3: 
    
    npx create-react-app ./

    install the extension: ES7+ React/Redux/React-Native snippets
    (with that extension we can use the comand rafce and construct react functional Component.)

    npm install react-icons
    (in this project we'll use react skills only)

    creating the folder 'components' with folders: article, brand, cta, feature and navbar
    export files on this folders at index.js in the folder 'components' 
    
    creating the folder 'containers' with folders: blog, features, footer, header, possibility and whatGPT3
    export files on this folders at index.js in the folder 'containers'

    IMPORT:
        I'm using to export: export FunctionName (){} instead of export default FunctionName().
        in that case to import the FunctionName() we need to use: import {FunctionName} from './file'

    in App.js we can import all files that we need: 
        import { Blog, Features, Footer, Header, Possibility, WhatGPT3 } from './containers'
        import { Brand, CTA, Navbar } from './components'   
    that way we keep it simple and clean.
    now we can construct the application calling ours interfaces. 

    MENU LINKS INSED A FRAGMENT:
        the menu links in the const Menu at 'Navbar.jsx'. When we need the Menu links just use <Menu /> to calling
        this items inside a DIV for example. It's have been more clean as well.

    TOGGLE MENU:
        in toggle menu we are using a ternary operator to verify if has a 'togglemenu'
        if togglemenu equal true the x icons appears to close the menu, if togglemenu equal false the 3 lines icon appears.

        if exists a togglemenu we call the fragment <Menu /> and the sign in and sign up links.

    at folder 'src' we have the 'App.css' where i'm setting general css's rules 
    at folder 'src' we have the 'index.css' in that file we setup a font style and colors as variable
    to use on 'App.css'

    in the site 'angrytools.com/gradient/' we generate the gradient to the application

    setting up 'react-dom' at 'src > index.js' a new version 18 of React: 
        import { createRoot } from 'react-dom/client';
        const container = document.getElementById('root');
        const root = createRoot(container); // createRoot(container!) if you use TypeScript
        root.render(<App tab="home" />);

    in the site animista.net/play/basic/scale-up we get some animation to use in our project

    importing menu of navbar with: import { RiMenu3Line, RiCloseLin } from 'react-icons/ri'
    at 'Navbar.jsx'

    in this project we're using a BEM (Block Element Modifier) concept / good practice.
    more about that here: https://sparkbox.com/foundry/bem_by_example

    in the folder 'assets' we have all the logos and images that we need in the layout.

    in the file 'index.css' font-size: 62.5%; tha will set a size 16px as 1.6rem.
    just divide the size in px for 10: 16px/10 = 1.6rem

    in 'Navbar.jsx' we're using the hook useState to toggle the Menu application
    when this useState are true an icon appears to close the menu. Here we are using
    the RiCloseLine to add an icon on menu.

    the const Menu in 'Navbar.jsx' contains the menu links inside a react fragment. 
    That way we can use the 'const Menu' to show the options and it's more clean.

    HOME:
        Our home section is located at 'containers/header/Header.jsx'
        here we have some texts, images, input and button to Get Started.

        at Header.jsx we are importing: 
            importing image of people: import people from '../../assets/people.png'
            importing image of AI: import ai from '../../assets/ai.png'

    
    

